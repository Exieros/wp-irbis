/*
	Имя переменной wp_irbis_output_template не менять. 
	Условия проверяются каскадом. Если одно из них не выполняется, то происходит переход к следующей паре if/then. Если ни одна из пар не подойдет, произойдет переход на следующее поле.
	Например сначала формируются "Авторы:". По порядку каскадом проходятся все условия(conditions), а так же вложенные подусловия(if). Если одно из подусловие не соблюдается происходит переход к следующему условию.
	
	Синтаксис полей:
		v700 - Поле без проверки на подполя;
		v700^A - Поле с проверкой на существование подполя А;
		
	В then происходит regexp замена полей на их значения.
	Как только находится одно из условий, требования которого выполняются, происходит переход к следующему полю.
	
	Управляющие последовательности:
		{eol^.} - Работает только в повторяемом поле. Ставит указанный после ^ набор символов  если это последний элемент в итерации, иначе не ставит ничего.
		{del^,} - Работает только в повторяемом поле. Работает как и предыдущий только строго наоборот. От слова delimiter(разделитель).
		Пример: then: 'v330^C{eol^.}{del^,} '
		Выведет: [значение поля 330], [значение поля 330], [значение поля 330].
		В зависимости от того, сколько полей с номером repeat_field будет найдено.

	TODO: В дальнейшем еще добавить возможность писать пользовательские функции проверки.
*/

let wp_irbis_output_template = [
	{
		ru: 'Авторы',
		conditions: [
			{
				if: ['v700^A','v700^G' ],
				then: 'v700^A v700^G'
			},
			{
				if: [ 'v700^B', 'v700^A' ],
				then: 'v700^B v700^A'
			}
		]
	},
	{
		ru: 'Заглавие',
		conditions: [
			{
				if: ['v200^A','v700^E' ],
				then: 'v200^A // v200^E;'
			},
			{
				if: ['v200^A','v200^E','v200^F'],
				then: 'v200^A : [v200^E] / v200^F'
			},
			{
				if: ['v200^A','v200^E'],
				then: 'v200^A : [v200^E]'
			},
			{
				if: ['v200^A' ],
				then: 'v200^A;'
			},
			{
				if: [ 'v461^C', 'v461^F', 'v461G' ],
				then: 'v461^C // v461^F, v461G;'
			}
		]
	},
	{
		ru: 'Коллективы',
		repeat: true,
		repeat_field: 962,
		conditions: [
			{
				if: ['v962^A' ],
				then: 'v962^A'
			}
		]
	},
	{
		ru: 'Содержание',
		repeat: true,
		repeat_field: 330,
		conditions: [
			{
				if: [ 'v330^C', 'v330^G' ],
				then: 'v330^C v330^G; '
			},
			{
				if: [ 'v330^C' ],
				then: 'v330^C{eol^.}{del^;} '
			}
		]
	},
	{
		ru: 'Персоналии(Предметная рубрика)',
		repeat: true,
		repeat_field: 600,
		conditions: [
			{
				if: [ 'v600^A', 'v600^F' ],
				then: 'v600^A (v600^F); '
			}
		]
	},
	{
		ru: 'Издание',
		conditions: [
			{
				if: [ 'v210^D', 'v210^C', 'v210^A' ],
				then: 'v210^A : v210^C, v210^D '
			}
		]
	},
	{
		ru: 'ISBN',
		repeat: true,
		repeat_field: 10,
		can_copy: true,
		conditions: [
			{
				if: [ 'v10^A' ],
				then: 'v10^A'
			}
		]
	},
	{
		ru: 'Серия',
		conditions: [
			{
				if: [ 'v225^A' ],
				then: 'v225^A'
			}
		]
	},
	{
		ru: 'ББК',
		repeat: true,
		repeat_field: 621,
		conditions: [
			{
				if: [ 'v621' ],
				then: 'v621'
			}
		]
	},
	{
		ru: 'Шифр',
		conditions: [
			{
				if: [ 'v903' ],
				then: 'v903'
			}
		]
	},
	{
		ru: 'Возрастное ограничение',
		conditions: [
			{
				if: [ 'v900^Z' ],
				then: 'v900^Z'
			}
		]
	}
];